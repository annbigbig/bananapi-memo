問題：如何使用sftp上傳檔案到服務器？

這裡記錄了如何使用sftp（安全檔案傳輸協定 SSH File Transfer Protocol）
來從工作機上傳寫好的網站代碼到www服務器
請先確定www服務器上的ssh server服務已經正確安裝並啟動
可以參考稍早的筆記在：
https://github.com/annbigbig/cubietruck_tutorial/blob/master/Aruntu_0888/objective_6.txt

目的：
除了要讓工作機用戶可以正常使用sftp上傳或是下載他在服務器上的網站根目錄
這裡還要提高安全等級，在服務器端「只」使用公鑰來認證登入的用戶（禁用密碼登入）
並且禁止用戶ssh登入服務器取得shell，然後在用戶於工作機上使用GUI圖形介面的客戶端程式如FileZilla登入服務器之後
還要chroot把用戶限定不能離開他的家目錄
（以用戶testuser05為例，他的活動範圍就只有在/home/testuser05目錄裡）

網路參數：
服務器IP：192.168.0.166
工作機IP：192.168.0.12

需要完成的工作列表：
服務器端：
（用戶及群組部分）
     a.新增用戶testuser05，並設定好密碼
     b.新增sftponly群組
     c.把用戶testuser05加到sftponly群組
     d.把用戶www-data加到testuser05群組
     e.修改testuser05的家目錄路徑由預設的/home/testuser05改成根目錄 /
     f.修改testuser05的登入shell為/usr/sbin/nologin

（ssh key pair相關設定）
     g.產生用戶testuser05的ssh key pair（在chroot之後的家目錄下的/home/testuser05/.ssh）
     h.把剛才產生的public key添加到允許的公鑰認證列表authorized_keys（在chroot之前的原來的家目錄下的/.ssh）

（相關目錄權限設定）
     i.新增用戶testuser05的網站根目錄/home/testuser05/website，擁有人及群組為testuser05，權限775
     j.修改/home/testuser05的擁有人及群組皆為root，權限755
     k.刪除/home/testuser05目錄下的那些以.開頭的檔案，像是.bashrc、.bash_logout...（再也用不到了，因為我沒打算讓用戶ssh登入取得shell）

（/etc/ssh/sshd_config設定）
     l.修改/etc/ssh/sshd_config組態檔，然後重新啟動ssh server


工作機端：
     m.建立工作目錄，並在工作目錄裡面產生一些待會兒要上傳到服務器的網站代碼
     n.安裝好FileZilla軟體（開源的FTP用戶端程式）
     o.從服務器下載用戶testuser05的私鑰
     p.把剛才下載的服務器用戶testuser05的私鑰匯入到FileZilla
     q.使用sftp協定，用剛才匯入的私鑰，以testuser05的身分連線服務器
     r.從工作機端的本地工作目錄，上傳網站代碼到服務器的網站根目錄

細節開始：
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
a.新增用戶testuser05，並設定好密碼

在服務器上以root身分登入後，執行
# adduser testuser05

和終端機交談一下
Adding user `testuser05' ...
Adding new group `testuser05' (1003) ...
Adding new user `testuser05' (1002) with group `testuser05' ...
Creating home directory `/home/testuser05' ...
Copying files from `/etc/skel' ...
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
Changing the user information for testuser05
Enter the new value, or press ENTER for the default
	Full Name []: 
	Room Number []: 
	Work Phone []: 
	Home Phone []: 
	Other []: 
Is the information correct? [Y/n] y

看一下是不是真的新增了用戶testuser05
# cat /etc/passwd | grep testuser05

終端機打印了
testuser05:x:1002:1003:,,,:/home/testuser05:/bin/bash

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
b.新增sftponly群組

還是在服務器上，還是root身分，執行
# groupadd sftponly

終端機不會有什麼回應，我們看看剛才的指令到底有沒有新增了sftponly群組，執行
# cat /etc/group | grep sftponly

終端機打印了
sftponly:x:1001:

這樣就確定系統裡真的有sftponly群組的存在

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
c.把用戶testuser05加到sftponly群組

在把用戶testuser05加到sftponly群組之前，先看看他現在有加入什麼群組？執行
# id testuser05

終端機打印了
uid=1002(testuser05) gid=1003(testuser05) groups=1003(testuser05)

現在用戶testuser05加入的群組只有他自已的testuser05群組而已
執行以下指令，把他加入sftponly群組
# usermod -a -G sftponly testuser05

加入sftponly群組後，再看看testuser05用戶現在有加入什麼群組？執行
# id testuser05

終端機打印了
uid=1002(testuser05) gid=1003(testuser05) groups=1003(testuser05),1001(sftponly)

現在已經把用戶testuser05加到sftponly群組裡了
為什麼要作這個步驟的原因，是稍後我們設定ssh server的時候
可以在組態檔裡規定一個規則，只要是sftponly群組的用戶，就讓他只能使用sftp的功能
其他和ssh server有關的功能像是ssh登入或是使用scp拷貝檔案之類的，全都禁止使用

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
d.把用戶www-data加到testuser05群組

在把用戶www-data加到testuser05群組之前，先看看他現在有加入什麼群組？執行
# id www-data

終端機打印了
uid=33(www-data) gid=33(www-data) groups=33(www-data)

現在用戶www-data只有加入他自已的www-data群組
執行以下指令，把他加入用戶testuser05的群組，執行
# usermod -a -G testuser05 www-data

現在再確認一次用戶www-data加入了什麼群組，執行
# id www-data

終端機打印了
uid=33(www-data) gid=33(www-data) groups=33(www-data),1003(testuser05)

現在用戶www-data除了自已的群組www-data，他還加入了用戶testuser05的群組
為什麼讓用戶www-data加入用戶testuser05的群組
是因為nginx的worker processes是以用戶www-data身份執行
如果我把用戶testuser05的網站根目錄/home/testuser05/website
設定成權限775，那麼和用戶testuser05用一個群組的www-data用戶，
也可以讀或寫或執行用戶testuser05的網站根目錄

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
e.修改testuser05的家目錄路徑由預設的/home/testuser05改成根目錄 /

打開vi文字編輯器，修改/etc/passwd
# vi /etc/passwd

把原來的這一行
testuser05:x:1002:1003:,,,:/home/testuser05:/bin/bash
改成這樣
testuser05:x:1002:1003:,,,:/:/bin/bash
改完就存檔，離開vi文字編輯器

或是你也可以執行以下的指令，和上面直接編輯/etc/passwd是一樣的效果
# usermod -m -d / testuser05

然後終端機會微靠腰一下
usermod: directory / exists

我個人是喜歡直接編輯/etc/passwd，因為Linux指令真的多到爆
最好我每個都記得起來
至於為什麼要把用戶testuser05原來的家目錄由/home/testuser05改成系統根目錄 /
因為稍後在工作機上使用SFTP用戶端（FileZilla），以用戶testuser05的身分登入服務器之後
會作一個chroot的動作，用戶testuser05登入服務器之後，會被限制在/home/testuser05目錄裡
更白話的說，用戶testuser05他會以為他登入之後看到的根目錄 /就真的是根目錄了
但是其實不是，他看到的根目錄 / 其實是服務器上的/home/testuser05這個目錄，
其他服務器上比/home/testuser05更上層的目錄他都看不到，這就是chroot（Change root）
我們在用戶testuser05登入服務器執行change root之前
會先有一個家目錄，這裡我沒有辦法深究並詳細說明為什麼要把用戶testuser05的家目錄設定成系統根目錄 /
我看了其他文章寫的，感覺好像是大家為了怕麻煩，就直接設定成系統根目錄 /
因為系統根目錄是直接由root用戶持有，而權限值為755
如果你弄另一個像是/here/is/not/home/testuser05
當成是chroot之前的用戶testuser05的家目錄可能也可以（想深究的稍後就自已試一下）
只是你這樣要讓/here/is/not/home/testuser05這五層目錄都是root當擁有人，且權限都是755，光用想的就覺得很麻煩
所以我就簡單的跟著前輩的腳步走，那就簡單的把用戶testuser05的家目錄改成系統根目錄 / 就好
總之為什麼要把用戶testuser05的家目錄改成 /
chroot之前家目錄是路徑 /
chroot之後家目錄是/home/testuser05
兩個不可以一樣

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
f.修改testuser05的登入shell為/usr/sbin/nologin

打開vi文字編輯器，修改/etc/passwd
# vi /etc/passwd

把原來的這一行
testuser05:x:1002:1003:,,,:/:/bin/bash
改成這一行
testuser05:x:1002:1003:,,,:/:/usr/sbin/nologin
存檔，然後離開vi文字編輯器

這樣就確認用戶testuser05無法再ssh登入服務器取得shell

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
g.產生用戶testuser05的ssh key pair（在chroot之後的家目錄下的/home/testuser05/.ssh）

還是服務器上的root身份，切換到/home/testuser05目錄
# cd /home/testuser05

新增一個.ssh子目錄，然後修改.ssh子目錄的擁有人和群組為testuser05用戶，權限為700
# mkdir .ssh
# chown testuser05:testuser05 .ssh
# chmod 700 .ssh

查看一下剛才的.ssh子目錄
# ls -al |grep ssh

終端機打印了
drwx------ 2 testuser05 testuser05 4096 Nov  8 22:47 .ssh

進入.ssh子目錄
# cd .ssh

產生用戶testuser05的ssh key pair，執行
# ssh-keygen -t rsa -C "testuser05@localhost"

終端機會問三個問題，第一個問題是問你產生的private key要放在那裡？
請手動輸入/home/testuser05/.ssh/id_rsa
不然系統會自作聰明給你存在/root/.ssh/id_rsa（因為你現在是root用戶）
剩下兩個問題都按下Enter接受預設值就好
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): /home/testuser05/.ssh/id_rsa
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/testuser05/.ssh/id_rsa.
Your public key has been saved in /home/testuser05/.ssh/id_rsa.pub.
The key fingerprint is:
4a:47:68:2f:7c:2d:6e:a3:0b:d7:f3:3c:e3:67:c0:9a testuser05@localhost
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|       .         |
|      o .        |
|     o o .       |
|      + S..      |
|     . B .o      |
|    . o *o .     |
|     o oE=o o    |
|      o. .+=     |
+-----------------+

看一下剛才產生的鑰匙對
# ls -al

終端機打印了
total 16
drwx------ 2 testuser05 testuser05 4096 Nov  8 22:52 .
drwxr-xr-x 3 testuser05 testuser05 4096 Nov  8 22:47 ..
-rw------- 1 root       root       1675 Nov  8 22:52 id_rsa
-rw-r--r-- 1 root       root        402 Nov  8 22:52 id_rsa.pub

把公鑰（id_rsa.pub）和私鑰（id_rsa）的擁有人和群組都改成用戶testuser05，執行
# chown testuser05:testuser05 id_rsa*

再確認一次檔案權限
# ls -al

終端機打印了
total 16
drwx------ 2 testuser05 testuser05 4096 Nov  8 22:52 .
drwxr-xr-x 3 testuser05 testuser05 4096 Nov  8 22:47 ..
-rw------- 1 testuser05 testuser05 1675 Nov  8 22:52 id_rsa
-rw-r--r-- 1 testuser05 testuser05  402 Nov  8 22:52 id_rsa.pub

很好很好，這才是我要的權限

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
h.把剛才產生的public key添加到允許的公鑰認證列表authorized_keys（在chroot之前的原來的家目錄下的/.ssh）

一樣是在服務器上，一樣是root用戶
切換到系統根目錄
# cd /

產生一個.ssh的子目錄
# mkdir .ssh

看一下/.ssh目錄的權限
# ls -al|grep ssh

終端機打印了
drwxr-xr-x   2 root root   4096 Nov  7 23:18 .ssh

進入/.ssh目錄
# cd /.ssh

產生一個空白的authorized_keys檔案
# touch ./authorized_keys

把上個步驟產生的用戶testuser05的公鑰，添加到authorized_keys檔案後面
# cat /home/testuser05/.ssh/id_rsa.pub >> /.ssh/authorized_keys

看一下authorized_keys的權限
# ls -al

終端機打印了
total 12
drwxr-xr-x  2 root root 4096 Nov  8 23:00 .
drwxr-xr-x 22 root root 4096 Nov  7 23:17 ..
-rw-r--r--  1 root root  402 Nov  7 23:18 authorized_keys

看一下/.ssh/authorized_keys的內容
# cat /.ssh/authorized_keys

終端機打印了
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFNm7UU1xjrQ1o/m++T9565D0a1y8Yk7QGD8GCYGOlErR+QwMV+qBLCzxvrzh2j/xyQm0oIIh03QNfbmCWWS7WdAlOqLa6csnv1gHHiyYNv0AHn0rYMYpyX0OBR/tlcfJpOFouZNzJJ6yiDWW/LSO4g+xiad76F+5UMzCzl/xinSQ5QJFwVLqVRnkG6lrs2//7aiy9F2b3C+YHkArhobmEoKp6+vD/RuAokwNn4UxP0MID2LRDqOF+SHvJO0NHgLM7ahtQF9jxTaiBItlab79TbPiuSsvwsmtCRBlj+82N7McTxTA+ePs9iVLWB5a1tqQeqrrqGLOhXYOroSDTYo9V testuser05@localhost

在這裡請一定要注意，你還記得剛才把用戶testuser05的家目錄改成了系統根目錄 / 嗎？
就是你修改/etc/passwd，然後把testuser05的家目錄從原來的/home/testuser05改成 / 的這個步驟
所以稍後在工作機上操作FileZilla，指定用戶testuser05的私鑰，以服務器用戶testuser05身分來對服務器作sftp登入的時候
服務器會到用戶testuser05的家目錄下的.ssh子目錄去找authorized_keys檔案
也就是服務器系統根目錄 / 下的.ssh目錄下去找authorized_keys檔案
看看裡面記錄的所有ssh公鑰，有沒有其中一把是和工作機SFTP用戶端使用的ssh私鑰是一對的？
如果有的話，就認定從工作機那邊登入的人，確實是服務器上的用戶testuser05
再一次強調，因為你把用戶testuser05的家目錄改成系統根目錄 / 了，
所以authorized_keys的路徑是
/.ssh/authorized_keys
而不是
/home/testuser05/.ssh/authorized_keys
你如果弄錯的話，工作機那邊就不能使用服務器用戶testuser05的私鑰來作sftp登入了，因為服務器這邊找不到可以比對的合法的公鑰列表

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
i.新增用戶testuser05的網站根目錄/home/testuser05/website，擁有人及群組為testuser05，權限775

一樣是在服務器上，一樣是root身分，切換到/home/testuser05目錄
# cd /home/testuser05

新增用戶testuser05的網站根目錄
# mkdir website

修改擁有人及群組為testuser05
# chown testuser05:testuser05 /home/testuser05/website

修改權限為775
# chmod 775 /home/testuser05/website

看一下權限對不對？
# ls -al

終端機打印了
total 28
drwxr-xr-x 4 testuser05 testuser05 4096 Nov  8 23:40 .
drwxr-xr-x 5 root       root       4096 Nov  8 20:52 ..
-rw-r--r-- 1 testuser05 testuser05  220 Nov  8 20:52 .bash_logout
-rw-r--r-- 1 testuser05 testuser05 3637 Nov  8 20:52 .bashrc
-rw-r--r-- 1 testuser05 testuser05  675 Nov  8 20:52 .profile
drwx------ 2 testuser05 testuser05 4096 Nov  8 22:52 .ssh
drwxrwxr-x 2 testuser05 testuser05 4096 Nov  8 23:40 website

是的，用戶testuser05網站根目錄/home/testuser05/website，擁有人及群組為testuser05，權限775

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
j.修改/home/testuser05的擁有人及群組皆為root，權限755

一樣在服務器上，一樣是root身分，切換到/home目錄下，執行
# cd /home

把/home/testuser05目錄的擁有人及群組都改成root，執行
# chown root:root /home/testuser05

看一下權限
# ls -al | grep testuser05

終端機打印了
drwxr-xr-x  4 root     root     4096 Nov  8 23:40 testuser05

也許你又會問為什麼要改成擁有人和群組都是root用戶？
一樣是因為testuser05登入之後要chroot的原因
用戶testuser05新的change root之後的根目錄（/home/testuser05）擁有人和群組就是一定要root用戶，而權限不得大於755

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
k.刪除/home/testuser05目錄下的那些以.開頭的檔案，像是.bashrc、.bash_logout...（再也用不到了，因為我沒打算讓用戶ssh登入取得shell）

一樣在服務器上，一樣是root身分，執行
# cd /home/testuser05
# rm -rf \.bash*
# rm -rf \.pro*

不刪其實也沒差，只是我覺得FileZilla登入之後，
都會看到chroot之後的根目錄下有這些.bashrc、.bash_logout覺得很不舒服
就把它刪掉，反正也用不到它們了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
l.修改/etc/ssh/sshd_config組態檔，然後重新啟動ssh server

這裡直接給出我的/etc/ssh/sshd_config
# cat /etc/ssh/sshd_config

內容如下
# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port 22
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin without-password
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

#X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*


# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

#Subsystem sftp /usr/lib/openssh/sftp-server
Subsystem sftp internal-sftp
Match group sftponly
   ChrootDirectory /home/%u
   X11Forwarding no
   AllowTcpForwarding no
   ForceCommand internal-sftp

然後接下來的是預設的/etc/ssh/sshd_config
我在變更設定值之前，已經先把它另存成了 /etc/ssh/sshd_config.default
這裡一樣給出

# cat /etc/ssh/sshd_config.default

內容如下
# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port 22
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin without-password
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
#PasswordAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

值得注意的是，在設定/etc/ssh/sshd_config的時候
這個區塊
Subsystem sftp internal-sftp
Match group sftponly
   ChrootDirectory /home/%u
   X11Forwarding no
   AllowTcpForwarding no
   ForceCommand internal-sftp
你最好是放在整個組態檔的最後面
如果只是直接改，讓最後一行是
UsePAM yes
那麼就會發現在改完組態檔之後
執行
# service ssh restart

來重新啟動ssh server的時候
不管怎樣ssh server都不會啟動
總之你加入上面那個6行的區塊之後
你的/etc/ssh/sshd_config的最後一行絕對不可以再是UsePAM yes（和上面那個6行區塊混在一起變成那個區塊的第7行）
把這一行放到設定檔的其他地方去
或是直接照抄我給出的第一個/etc/ssh/sshd_config
那是目前從我的服務器上可以正常工作的/etc/ssh/sshd_config直接打印出來的一字不差

這裡再給出了正常的重新啟動ssh server之後的終端機訊息，應該要像這樣
root@lemaker:/etc/ssh# service ssh status
ssh start/running, process 811
root@lemaker:/etc/ssh# service ssh restart
ssh stop/waiting
ssh start/running, process 1754
root@lemaker:/etc/ssh# service ssh status
ssh start/running, process 1754
root@lemaker:/etc/ssh# netstat -anp|grep ssh
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1754/sshd       
tcp        0      0 192.168.0.166:22        192.168.0.12:52286      ESTABLISHED 1275/sshd: bananapi
tcp6       0      0 :::22                   :::*                    LISTEN      1754/sshd       
unix  3      [ ]         STREAM     CONNECTED     4441     1275/sshd: bananapi 
unix  3      [ ]         STREAM     CONNECTED     4406     1275/sshd: bananapi 
unix  3      [ ]         STREAM     CONNECTED     3826     1275/sshd: bananapi 

這樣子才算真正的成功的重新啟動了ssh server
通訊埠22（祖國用語會是「端口22」）接受來自任何地方（0.0.0.0）的tcp連線

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
m.建立工作目錄，並在工作目錄裡面產生一些待會兒要上傳到服務器的網站代碼

服務器的部分終於都搞定了，現在請到工作機上，
我們要建立一個工作目錄，裡面是一些待會兒要上傳到服務器的檔案（網站的代碼）
以用戶anntony的身分登入之後，執行
$ cd /home/anntony
$ mkdir working-dir
$ cd working-dir
$ echo "welcome to testuser05's website<br>" >> index.html
$ mkdir -p test1/test2/test3
$ cd test1/test2/test3
$ echo "test4" >> test4.txt
$ cd /home/anntony/working-dir
$ mkdir jpg-files
$ cd jpg-files
$ touch ./aaa.jpg ./bbb.jpg ./ccc.jpg
$ cd ..

就這樣，以後你每天就是提交新的網站代碼到 /home/anntony/working-dir 目錄
然後把它上傳到你的www服務器，發布新的內容

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
n.安裝好FileZilla軟體（開源的FTP用戶端程式）

在工作機上以anntony身分登入，執行
$ sudo apt-get install filezilla

或是打開Synaptic套件管理員，把FileZilla搜尋出來然後安裝上
兩個方法都可以，自已選一個

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
o.從服務器下載用戶testuser05的私鑰

一樣是在工作機上，以用戶anntony身分登入
我們要把剛才產生的服務器用戶testuser05的私鑰給下載到工作機這邊
問題來了，我剛才把ssh server的密碼登入功能給關掉了
然後我現在工作機這邊又沒有用戶testuser05的私鑰，我才正準備要下載哩
那麼到底我要怎麼把服務器用戶testuser05的私鑰給下載到工作機這邊呢？
把隨身碟插到服務器，然後把私鑰存入隨身碟，再拔下隨身碟，再拿到工作機插上去把私鑰複製出來嗎？
（一陣沈默…）
那只好再「暫時」把ssh server密碼登入的功能再打開了
待會兒工作機下載完私鑰，服務器再把密碼登入給關掉
於是再回到服務器上，登入為root身分，打開vi文字編輯器修改/etc/ssh/sshd_config
# vi /etc/ssh/sshd_config
把這一行
PasswordAuthentication no
改成這樣
PasswordAuthentication yes
然後存檔離開，以root身分執行以下指令重新啟動ssh server
# service ssh restart

記住這只是「暫時」的，待會兒工作機下載到私鑰之後，就立刻把服務器密碼登入的功能再關閉掉
現在再次回到工作機上，一樣是用戶anntony的身分，執行
$ cd /home/anntony/.ssh/
$ mkdir others
$ mkdir filezilla
$ cd others
$ sftp testuser05@192.168.0.166:/.ssh/id_rsa ./testuser05_on_banana_private_key

終端機會要求你輸入服務器用戶testuser05的密碼
testuser05@192.168.0.166's password: 
Connected to 192.168.0.166.
Fetching /.ssh/id_rsa to ./testuser05_on_banana_private_key
/.ssh/id_rsa                                                                               100% 1675     1.6KB/s   00:00 

輸入完密碼之後，就順利從服務器下載了用戶testuser05的私鑰，然後另存成檔名testuser05_on_banana_private_key
最後再把這支私鑰複製一份到/home/anntony/.ssh/filezilla/
# cp ./testuser05_on_banana_private_key /home/anntony/.ssh/filezilla/

待會兒工作機上的FileZilla要匯入服務器用戶testuser05的私鑰
請用這個路徑的這一支：
/home/anntony/.ssh/filezilla/testuser05_on_banana_private_key

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
p.把剛才下載的服務器用戶testuser05的私鑰匯入到FileZilla

打開工作機上的FileZilla軟體，因為直接在終端機下操作sftp指令痛苦指數很高
而且沒什麼營養，我只是要使用SFTP protocal上傳還有下載檔案而已
我不想再背那麼多指令，直接使用FileZilla這種圖形介面的FTP用戶端軟體比較快樂
進入FileZilla之後，執行選單的
「編輯 > 設定（S）...> SFTP > 加入金鑰檔案（A）...> 檔案系統 > 位置」
直接輸入剛才下載的私鑰的路徑
/home/anntony/.ssh/filezilla/testuser05_on_banana_private_key
按下「開啟」
然後會跳出對話框詢問你
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
檔案 "/home/anntony/.ssh/filezilla/testuser05_on_banana_private_key" 並非為 FileZilla 支援的格式.
您想將其轉換成支援的格式?
　　　　　　　　　　　　　　　　　　　　　否（N）　　　　是（Y）
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
選擇「是（Y）」，然後再跳出了一個

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
選擇轉換後金鑰檔案名稱
名稱　　——————————————

　　　　　　　　　　　　　　　　　　　　　取消（C）　　　　儲存（S）
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
在對話框的「名稱」的地方，輸入
/home/anntony/.ssh/filezilla/filezilla.ppk.testuser05.banana.private.key
然後按「儲存（S）」，然後回到了「設定」的對話框，再按下左下角的「確認」
這樣就匯入了服務器用戶testuser05的私鑰到FileZilla裡了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
q.使用sftp協定，用剛才匯入的私鑰，以testuser05的身分連線服務器

一樣是在工作機上的FileZilla軟體裡面，打開
「檔案 > 站台管理員（S）...」
在「站台管理員」對話框，選「新增站台（N）」
新站台的名稱請設定成 testuser05@192.168.0.166
然後在右邊設定以下欄位及值
主機（H）：192.168.0.166
協定（T）：SFTP - SSH File Transfer Protocol
登入型式（L）：詢問密碼
使用者（U）：testuser05
密碼（W）：
注意上面密碼不要輸入任何字元，讓它保持空白，你要先在「登入型式（L）」選「一般」才有辦法把它清成空白
全部填完，按下下面的「連線」，然後會出現
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
請輸入此伺服器的密碼
名稱：testuser05@192.168.0.166
主機：192.168.0.166
使用者：testuser05
密碼（P）：______________________
X 記住這次連線的密碼
　　　確定（O）　　　取消（C）
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
不要輸入密碼，讓密碼欄保持空白，因為我們現在是直接使用服務器用戶testuser05的私鑰來登入，不需要輸入密碼
按下「確定（O）」之後
哦耶耶耶，連線成功了，我再貼出FileZilla裡面的小小終端機裡的訊息，如下：
狀態:	正在連線到 192.168.0.166 ...
回應:	fzSftp started
指令:	keyfile "/home/anntony/.ssh/filezilla/filezilla.ppk.testuser05.banana.private.key"
指令:	open "testuser05@192.168.0.166" 22
狀態:	Connected to 192.168.0.166
狀態:	正在取得目錄列表...
指令:	pwd
回應:	Current directory is: "/"
指令:	ls
狀態:	Listing directory /
狀態:	計算伺服器的時區偏移量...
指令:	mtime ".ssh"
回應:	1415458358
狀態:	時區偏移量: 伺服器: 0 秒. 本地端: 28800 秒. 相差: 28800 秒.
狀態:	成功取得目錄列表

你可以看到FileZilla中間偏右方有一個「遠端站台」，用戶testuser05以sftp://協定登入服務器之後
確實被限制在服務器的/home/testuser05目錄裡了
現在已經成功登入服務器，剩下最後一步，就是把工作機那邊寫好的網站代碼上傳到服務器

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
r.從工作機端的本地工作目錄，上傳網站代碼到服務器的網站根目錄

接著上一個步驟，目前在工作機上的FileZilla軟件的操作介面裡
已經使用服務器用戶testuser05的私鑰登入服務器的狀態
本地站台：/home/anntony/working-dir/
遠端站台：/website
選擇左下方「本地站台」下面的index.html
然後按右鍵選「上傳」
上傳完成之後，回到服務器的終端機，以root身分執行
# cd /home/testuser05/website
# ls -al

終端機打印了
total 12
drwxrwxr-x 2 testuser05 testuser05 4096 Nov  9 23:00 .
drwxr-xr-x 4 root       root       4096 Nov  8 23:55 ..
-rw-rw-r-- 1 testuser05 testuser05   46 Nov  9 23:00 index.html

看一下index.html檔案的內容，執行
# cat ./index.html

終端機打印了
welcome to testuser05's website<br>

是的，這是稍早之前我們在步驟m裡面，在工作機上的/home/anntony/working-dir/index.html
產生的網頁內容，這裡只上傳了index.html，步驟m裡還有產生其他的目錄
如果需要上傳，就是選取起來，按下右鍵，然後選「上傳」就可以了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
打完收工

